name: Docker Image Build

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'version of this branch'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    # 为 dependabot 分支跳过构建，避免权限问题
    if: ${{ !startsWith(github.actor, 'dependabot') }}
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:v0.12.0

    - name: Log into GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Determine version and tags
      run: |
        # 获取分支名，移除 refs/heads/ 前缀
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        # 将分支名中的特殊字符替换为连字符，确保标签有效
        SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9.-]/-/g')
        
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ inputs.version }}"
        elif [ "$BRANCH_NAME" = "master" ]; then
          VERSION="${{ github.sha }}"
        else
          VERSION="$SAFE_BRANCH_NAME"
        fi
        echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Build and push Docker image (multi-arch)
      run: |
        PLATFORMS=linux/arm64,linux/amd64
        DOCKER_IMAGE=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        VERSION=${IMAGE_VERSION:-latest}
        BRANCH_NAME=${BRANCH_NAME:-unknown}
        echo "DOCKER_IMAGE_LOWERCASE=$DOCKER_IMAGE" >> $GITHUB_ENV

        if [ "$BRANCH_NAME" = "master" ]; then
          docker buildx build --platform $PLATFORMS \
            -f Dockerfile.github-actions \
            -t $DOCKER_IMAGE:latest \
            -t $DOCKER_IMAGE:${VERSION} \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            --push .
        else
          docker buildx build --platform $PLATFORMS \
            -f Dockerfile.github-actions \
            -t $DOCKER_IMAGE:${VERSION} \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            --push .
        fi

    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_IMAGE_LOWERCASE }}:${{ env.IMAGE_VERSION }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif' 